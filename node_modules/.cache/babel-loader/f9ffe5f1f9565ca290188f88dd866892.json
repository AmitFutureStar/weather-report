{"ast":null,"code":"var _jsxFileName = \"/home/amit/own project/weather-report/src/components/Button/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\nconst propTypes = {\n  text: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  customClass: PropTypes.string,\n  onClick: PropTypes.func\n};\nconst defaultProps = {\n  text: \"Button\",\n  type: \"button\",\n  color: \"warning\",\n  size: \"md\",\n  isDisabled: false,\n  isActive: false,\n  customClass: '',\n  onClick: () => {},\n  isLoading: false\n}; // how to use\n// Ex1: <Button text=\"Add To Cart\" />\n// Ex2: <Button type=\"button\" text=\"Add To Cart\" onClick={this.addToCart} />\n\nconst Button = ({\n  text,\n  type,\n  color,\n  size,\n  isActive,\n  onClick,\n  customClass,\n  isDisabled,\n  isLoading\n}) => {\n  const btnEvent = isLoading ? 'btn_event' : '';\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: type,\n    onClick: onClick,\n    className: `btn ${'btn-' + size} ${isActive ? 'active' : \"\"} ${customClass} ${btnEvent}`,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"btn_spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      opacity: '0.2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 81\n    }\n  }, text)) : text);\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/home/amit/own project/weather-report/src/components/Button/Button.jsx"],"names":["React","PropTypes","propTypes","text","string","type","size","color","customClass","onClick","func","defaultProps","isDisabled","isActive","isLoading","Button","btnEvent","position","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAEF,SAAS,CAACG,MADA;AAEhBC,EAAAA,IAAI,EAAEJ,SAAS,CAACG,MAFA;AAGhBE,EAAAA,IAAI,EAAEL,SAAS,CAACG,MAHA;AAIhBG,EAAAA,KAAK,EAAEN,SAAS,CAACG,MAJD;AAKhBI,EAAAA,WAAW,EAAEP,SAAS,CAACG,MALP;AAMhBK,EAAAA,OAAO,EAAER,SAAS,CAACS;AANH,CAAlB;AASA,MAAMC,YAAY,GAAG;AACnBR,EAAAA,IAAI,EAAE,QADa;AAEnBE,EAAAA,IAAI,EAAE,QAFa;AAGnBE,EAAAA,KAAK,EAAE,SAHY;AAInBD,EAAAA,IAAI,EAAE,IAJa;AAKnBM,EAAAA,UAAU,EAAE,KALO;AAMnBC,EAAAA,QAAQ,EAAE,KANS;AAOnBL,EAAAA,WAAW,EAAE,EAPM;AAQnBC,EAAAA,OAAO,EAAE,MAAM,CAAG,CARC;AASnBK,EAAAA,SAAS,EAAE;AATQ,CAArB,C,CAYA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdZ,EAAAA,IADc;AAEdE,EAAAA,IAFc;AAGdE,EAAAA,KAHc;AAIdD,EAAAA,IAJc;AAKdO,EAAAA,QALc;AAMdJ,EAAAA,OANc;AAOdD,EAAAA,WAPc;AAQdI,EAAAA,UARc;AASdE,EAAAA;AATc,CAAD,KAUT;AACJ,QAAME,QAAQ,GAAGF,SAAS,GAAG,WAAH,GAAiB,EAA3C;AACA,sBACE;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,OAAO,EAAEI,OAFX;AAGE,IAAA,SAAS,EAAG,OAAM,SAASH,IAAK,IAAGO,QAAQ,GAAG,QAAH,GAAc,EAAG,IAAGL,WAAY,IAAGQ,QAAS,EAHzF;AAIE,IAAA,QAAQ,EAAEJ,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOIE,SAAS,gBACP;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,eAAsE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCf,IAAlC,CAAtE,CADO,GAELA,IATR,CADF;AAcD,CA1BD;;AA4BAY,MAAM,CAACb,SAAP,GAAmBA,SAAnB;AACAa,MAAM,CAACJ,YAAP,GAAsBA,YAAtB;AAEA,eAAeI,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst propTypes = {\n  text: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  customClass: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  text: \"Button\",\n  type: \"button\",\n  color: \"warning\",\n  size: \"md\",\n  isDisabled: false,\n  isActive: false,\n  customClass: '',\n  onClick: () => { },\n  isLoading: false\n};\n\n// how to use\n// Ex1: <Button text=\"Add To Cart\" />\n// Ex2: <Button type=\"button\" text=\"Add To Cart\" onClick={this.addToCart} />\n\nconst Button = ({\n  text,\n  type,\n  color,\n  size,\n  isActive,\n  onClick,\n  customClass,\n  isDisabled,\n  isLoading\n}) => {\n  const btnEvent = isLoading ? 'btn_event' : '';\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={`btn ${'btn-' + size} ${isActive ? 'active' : \"\"} ${customClass} ${btnEvent}`}\n      disabled={isDisabled}\n    >\n      {\n        isLoading ?\n          <span style={{ position: 'relative' }}><i className=\"btn_spinner\"></i><span style={{ opacity: '0.2' }}>{text}</span></span>\n          : text\n      }\n    </button>\n  );\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}