{"ast":null,"code":"var _jsxFileName = \"/home/amit/own project/weather-report/src/UploadRtas.jsx\";\nimport React, { Fragment, Component } from \"react\";\nimport Button from \"./components/Button/Button\";\nimport xyz from \"./components\";\n\nclass UploadRtas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickTab = type => {\n      this.setState({\n        activeTab: type\n      });\n    };\n\n    this.showUpload = () => {\n      this.setState({\n        showUpload: true,\n        showMoreGuide: false\n      });\n    };\n\n    this.showMore = () => {\n      this.setState({\n        showMoreGuide: !this.state.showMoreGuide\n      });\n    };\n\n    this.state = {\n      activeTab: \"CAMS\",\n      showMoreGuide: false,\n      showUpload: false\n    };\n  }\n\n  render() {\n    const {\n      activeTab,\n      showMoreGuide,\n      showUpload\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, showUpload && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 border-bottom  al_tabs_2\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `col text-center ${activeTab === \"CAMS\" ? \"active \" : \"\"}`,\n      onClick: () => this.handleClickTab(\"CAMS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"CAMS\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: `col text-center ${activeTab === \"Karvy\" ? \"active\" : \"\"}`,\n      onClick: () => this.handleClickTab(\"Karvy\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \" \", \"Karvy\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: `col text-center ${activeTab === \"FT\" ? \"active\" : \"\"}`,\n      onClick: () => this.handleClickTab(\"FT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \" \", \"FT\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: `col text-center ${activeTab === \"BSE\" ? \"active\" : \"\"}`,\n      onClick: () => this.handleClickTab(\"BSE\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \" \", \"BSE\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-between mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Upload MFSD221 (Transaction File) \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row border border-dark p-1 rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"col-9 form-control\",\n      type: \"file\",\n      name: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"file\",\n      className: \"col-3 al_button_01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, \"UPLOAD\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Upload MFSD203 (Summary File)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row border border-dark p-1 rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"col-9 form-control\",\n      type: \"file\",\n      name: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"file\",\n      className: \"col-3 al_button_01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, \"UPLOAD\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"par_7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Please read through the *guidelines*  carefully before uploading the files.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"We support excel & csv files for upload.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"If the headers do not match or if the file format is different, you will get an error message. Please contact Support Team during such cases.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Transaction files of RTA are mandatory. In case you would like to do recon, you may upload the summary files too.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"While downloading the transaction files from RTA systems, please make sure that you do it since the oldest date of the transaction.\")), showMoreGuide && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"While downloading the summary files from RTA systems, please ensure date uniformity between all 4 RTAs. That is, the report \\\"as on date\\\" must be the same across all RTAs.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"In the case of FT, transactions can only be extracted for a max period of 6 months. Hence, you will have to upload multiple files.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Please choose \\\"Excel with Headers\\\" for CAMS & \\\"Excel\\\" for Karvy. Do note to select all AMCs.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Please delete the 1st row titled \\\"Transaction Report\\\" from the Karvy file.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"FT does not allow excel download. Hence, please convert the text/dbf files to excel for uploading.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"You can check out the processing stats under the RTA tab in order to know the transaction dates from which the file is processed.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"A unit recon process will be initiated in order to ensure data accuracy. Exceptions can be found under \\\"recon\\\" tab, where there would have been a mismatch between units in transaction & summary file, for a given folio/scheme combination. Please be aware that the investment reports will not be accurate for these.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"We will be creating unique client accounts based on all 4 RTA files\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"We will be mapping the existing UCCs to the client accounts so that you may continue to use them.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg_6 p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"Clients with existing UCCs would be fit to transact through this software from day zero. No on-boarding required.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"We will be mapping the existing mandate IDs to the client accounts. You may initiate a fresh SIP from this software using the same mandate.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bg-light p-3 col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"When the files are uploaded successfully, you will be able to see the reports the next day. In case of an upload failure, please contact Support Team.\")) // <ol start=\"6\">\n    //   <li>\n    //     You can check out the processing stats under the RTA tab in order to know the\n    //     transaction dates from which the file is processed.{\" \"}\n    //   </li>\n    //   <br />\n    //   <li>\n    //     You can always upload the same files again, and in such cases the data will be\n    //     overwritten & replace the existing data\n    //   </li>\n    //   <br />\n    //   <li>\n    //     A unit recon process will be initiated in order to ensure data accuracy.\n    //     Exceptions can be found under \"recon\" tab, where there would have been a mismatch\n    //     between units in transaction & summary file, for a given folio/scheme combination.\n    //     Please be aware that the investment reports will not be accurate for these.{\" \"}\n    //   </li>\n    //   <br />\n    //   <li>\n    //     Please be aware that the investment reports will not be accurate for folios where\n    //     there is a recon failure. You are requested to upload fresh set of data only for\n    //     the exceptions.\n    //   </li>\n    //   <br />\n    //   <li>\n    //     You may also find the client details where there are multiple banks, nominations &\n    //     addresses being provided.{\" \"}\n    //   </li>\n    //   <br />\n    //   <li>We will be creating unique client accounts based on all 4 RTA files </li>\n    //   <br />\n    //   <li>\n    //     We will be mapping the existing UCCs to the client accounts so that you may\n    //     continue to use them.{\" \"}\n    //   </li>\n    //   <br />\n    //   <li>\n    //     Clients with existing UCCs would be fit to transact through this software from day\n    //     zero. No on-boarding required.\n    //   </li>\n    //   <br />\n    //   <li>\n    //     We will be mapping the existing mandate IDs to the client accounts. You may\n    //     initiate a fresh SIP from this software using the same mandate.{\" \"}\n    //   </li>\n    //   <br />\n    //   <li>\n    //     For fresh UCC creation, we would populate the existing client data from the\n    //     backend so that you would be required to fill only minimal information.{\" \"}\n    //   </li>\n    // </ol>\n    , /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: showMoreGuide ? \"Show less\" : \"Show More\",\n      size: \"sm\",\n      onClick: () => this.showMore(),\n      customClass: \"al_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    })), showUpload === false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: \"Procced to upload\",\n      size: \"sm\",\n      onClick: () => this.showUpload(),\n      customClass: \"al_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default UploadRtas;","map":{"version":3,"sources":["/home/amit/own project/weather-report/src/UploadRtas.jsx"],"names":["React","Fragment","Component","Button","xyz","UploadRtas","constructor","props","handleClickTab","type","setState","activeTab","showUpload","showMoreGuide","showMore","state","render","cursor"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport Button from \"./components/Button/Button\";\nimport xyz from \"./components\"\n\nclass UploadRtas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"CAMS\",\n      showMoreGuide: false,\n      showUpload: false,\n    };\n  }\n\n  handleClickTab = (type) => {\n    this.setState({ activeTab: type });\n  };\n\n  showUpload = () => {\n    this.setState({\n      showUpload: true,\n      showMoreGuide: false,\n    });\n  };\n\n  showMore = () => {\n    this.setState({\n      showMoreGuide: !this.state.showMoreGuide,\n    });\n  };\n  render() {\n    const { activeTab, showMoreGuide, showUpload } = this.state;\n    return (\n      <Fragment>\n        <div className=\"container\">\n          {showUpload && (\n            <Fragment>\n              <div className=\"row mt-5 border-bottom  al_tabs_2\" style={{ cursor: \"pointer\" }}>\n                <span\n                  className={`col text-center ${activeTab === \"CAMS\" ? \"active \" : \"\"}`}\n                  onClick={() => this.handleClickTab(\"CAMS\")}\n                >\n                  CAMS\n                </span>\n                <span\n                  className={`col text-center ${activeTab === \"Karvy\" ? \"active\" : \"\"}`}\n                  onClick={() => this.handleClickTab(\"Karvy\")}\n                >\n                  {\" \"}\n                  Karvy\n                </span>\n                <span\n                  className={`col text-center ${activeTab === \"FT\" ? \"active\" : \"\"}`}\n                  onClick={() => this.handleClickTab(\"FT\")}\n                >\n                  {\" \"}\n                  FT\n                </span>\n                <span\n                  className={`col text-center ${activeTab === \"BSE\" ? \"active\" : \"\"}`}\n                  onClick={() => this.handleClickTab(\"BSE\")}\n                >\n                  {\" \"}\n                  BSE\n                </span>\n              </div>\n              <div className=\"row justify-content-between mt-5\">\n                <div className=\"col-sm-5\">\n                  <div className=\"form-group\">\n                    <label>Upload MFSD221 (Transaction File) </label>\n                    <div className=\"row border border-dark p-1 rounded\">\n                      <input className=\"col-9 form-control\" type=\"file\" name=\"file\" />\n                      <button type=\"file\" className=\"col-3 al_button_01\">\n                        UPLOAD\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-sm-5\">\n                  <div className=\"form-group\">\n                    <label>Upload MFSD203 (Summary File)</label>\n                    <div className=\"row border border-dark p-1 rounded\">\n                      <input className=\"col-9 form-control\" type=\"file\" name=\"file\" />\n                      <button type=\"file\" className=\"col-3 al_button_01\">\n                        UPLOAD\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                {/* <div className=\"col-sm-12 text-center pt-3\">\n                  <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                    {\" \"}\n                  </Button>\n                </div> */}\n              </div>\n\n              {/* <div className=\"row justify-content-center mt-4\">\n                <div className=\"col-sm-5\">\n                  <div className=\"row border border-dark p-1 rounded\">\n                    <input className=\"col-9 form-control\"   type=\"file\" name=\"file\" />\n                    <button type=\"file\" className=\"col-3 al_button_01\">\n                      Select\n                    </button>\n                  </div>\n                  <div className=\"row border border-dark rounded p-1 mt-4\">\n                    <input className=\"col-9 form-control\" placeholder=\"Aadhaar Card\" />\n                    <button type=\"file\" className=\"col-3 al_button_01\">\n                      {\" \"}\n                      Select\n                    </button>\n                  </div>\n                </div>\n              </div> */}\n            </Fragment>\n          )}\n\n          <div className=\"mt-5\">\n            <h6 className=\"par_7\">\n              Please read through the *guidelines*  carefully before uploading the files.\n            </h6>\n            <br />\n            <div className=\"row\">\n              <p className=\"bg_6 p-3 col-5 mr-2\">We support excel & csv files for upload.</p>\n              <p className=\"bg_6 p-3 col-5\">\n                If the headers do not match or if the file format is different, you will get an\n                error message. Please contact Support Team during such cases.\n              </p>\n              <p className=\"bg-light p-3 col-5 mr-2\">\n                Transaction files of RTA are mandatory. In case you would like to do recon, you may\n                upload the summary files too.\n              </p>\n              <p className=\"bg-light p-3 col-5\">\n                While downloading the transaction files from RTA systems, please make sure that you\n                do it since the oldest date of the transaction.\n              </p>\n            </div>\n            {showMoreGuide && (\n              <div className=\"row\">\n                <p className=\"bg_6 p-3 col-5 mr-2\">\n                  While downloading the summary files from RTA systems, please ensure date\n                  uniformity between all 4 RTAs. That is, the report \"as on date\" must be the same\n                  across all RTAs.\n                </p>\n                <p className=\"bg_6 p-3 col-5\">\n                  In the case of FT, transactions can only be extracted for a max period of 6\n                  months. Hence, you will have to upload multiple files.\n                </p>\n                <p className=\"bg-light p-3 col-5 mr-2\">\n                  Please choose \"Excel with Headers\" for CAMS & \"Excel\" for Karvy. Do note to select\n                  all AMCs.\n                </p>\n                <p className=\"bg-light p-3 col-5\">\n                  Please delete the 1st row titled \"Transaction Report\" from the Karvy file.\n                </p>\n\n                <p className=\"bg_6 p-3 col-5 mr-2\">\n                  FT does not allow excel download. Hence, please convert the text/dbf files to\n                  excel for uploading.\n                </p>\n                <p className=\"bg_6 p-3 col-5\">\n                  You can check out the processing stats under the RTA tab in order to know the\n                  transaction dates from which the file is processed.\n                </p>\n                <p className=\"bg-light p-3 col-5 mr-2\">\n                  A unit recon process will be initiated in order to ensure data accuracy.\n                  Exceptions can be found under \"recon\" tab, where there would have been a mismatch\n                  between units in transaction & summary file, for a given folio/scheme combination.\n                  Please be aware that the investment reports will not be accurate for these.\n                </p>\n                <p className=\"bg-light p-3 col-5\">\n                  We will be creating unique client accounts based on all 4 RTA files\n                </p>\n\n                <p className=\"bg_6 p-3 col-5 mr-2\">\n                  We will be mapping the existing UCCs to the client accounts so that you may\n                  continue to use them.\n                </p>\n                <p className=\"bg_6 p-3 col-5\">\n                  Clients with existing UCCs would be fit to transact through this software from day\n                  zero. No on-boarding required.\n                </p>\n                <p className=\"bg-light p-3 col-5 mr-2\">\n                  We will be mapping the existing mandate IDs to the client accounts. You may\n                  initiate a fresh SIP from this software using the same mandate.\n                </p>\n                <p className=\"bg-light p-3 col-5\">\n                  When the files are uploaded successfully, you will be able to see the reports the\n                  next day. In case of an upload failure, please contact Support Team.\n                </p>\n              </div>\n              // <ol start=\"6\">\n              //   <li>\n              //     You can check out the processing stats under the RTA tab in order to know the\n              //     transaction dates from which the file is processed.{\" \"}\n              //   </li>\n              //   <br />\n              //   <li>\n              //     You can always upload the same files again, and in such cases the data will be\n              //     overwritten & replace the existing data\n              //   </li>\n              //   <br />\n              //   <li>\n              //     A unit recon process will be initiated in order to ensure data accuracy.\n              //     Exceptions can be found under \"recon\" tab, where there would have been a mismatch\n              //     between units in transaction & summary file, for a given folio/scheme combination.\n              //     Please be aware that the investment reports will not be accurate for these.{\" \"}\n              //   </li>\n              //   <br />\n              //   <li>\n              //     Please be aware that the investment reports will not be accurate for folios where\n              //     there is a recon failure. You are requested to upload fresh set of data only for\n              //     the exceptions.\n              //   </li>\n              //   <br />\n              //   <li>\n              //     You may also find the client details where there are multiple banks, nominations &\n              //     addresses being provided.{\" \"}\n              //   </li>\n              //   <br />\n              //   <li>We will be creating unique client accounts based on all 4 RTA files </li>\n              //   <br />\n              //   <li>\n              //     We will be mapping the existing UCCs to the client accounts so that you may\n              //     continue to use them.{\" \"}\n              //   </li>\n              //   <br />\n              //   <li>\n              //     Clients with existing UCCs would be fit to transact through this software from day\n              //     zero. No on-boarding required.\n              //   </li>\n              //   <br />\n              //   <li>\n              //     We will be mapping the existing mandate IDs to the client accounts. You may\n              //     initiate a fresh SIP from this software using the same mandate.{\" \"}\n              //   </li>\n              //   <br />\n              //   <li>\n              //     For fresh UCC creation, we would populate the existing client data from the\n              //     backend so that you would be required to fill only minimal information.{\" \"}\n              //   </li>\n              // </ol>\n            )}\n            <div className=\"row\">\n              <div className=\"col\">\n                <Button\n                  text={showMoreGuide ? \"Show less\" : \"Show More\"}\n                  size=\"sm\"\n                  onClick={() => this.showMore()}\n                  customClass={\"al_button\"}\n                />\n              </div>\n              {showUpload === false && (\n                <div className=\"col text-center\">\n                  <Button\n                    text=\"Procced to upload\"\n                    size=\"sm\"\n                    onClick={() => this.showUpload()}\n                    customClass={\"al_button\"}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* <div className=\"container\">\n          <div className=\"mt-3\">\n            <div className=\"container-fluid app_layout\" id=\"guidelines\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 \">\n                  <div className=\"row mt-3\">\n                    <div className=\"col-md-9\">\n                      <div className=\"row no-gutters mb-2\">\n                        <div className=\"form-check mr-4\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"camsDocumentUpload\"\n                            id=\"cams_Upload\"\n                            checked={optionNames === \"camsDocumentUpload\"}\n                            onChange={() =>\n                              this.setState({\n                                optionNames: \"camsDocumentUpload\",\n                              })\n                            }\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"camsDocumentUpload\"\n                            style={{ marginTop: \"3px\" }}\n                          >\n                            CAMS\n                          </label>\n                        </div>\n                        <div className=\"form-check mr-4\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"karvyDocumentUpload\"\n                            id=\"karvy_Upload\"\n                            checked={optionNames === \"karvyDocumentUpload\"}\n                            onChange={() =>\n                              this.setState({\n                                optionNames: \"karvyDocumentUpload\",\n                              })\n                            }\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"karvyDocumentUpload\"\n                            style={{ marginTop: \"3px\" }}\n                          >\n                            Karvy\n                          </label>\n                        </div>\n                        <div className=\"form-check mr-4\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"ftDocumentUpload\"\n                            id=\"ft_Upload\"\n                            checked={optionNames === \"ftDocumentUpload\"}\n                            onChange={() =>\n                              this.setState({\n                                optionNames: \"ftDocumentUpload\",\n                              })\n                            }\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"ftDocumentUpload\"\n                            style={{ marginTop: \"3px\" }}\n                          >\n                            FT\n                          </label>\n                        </div>\n                        <div className=\"form-check mr-4\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"sundaramDocumentUpload\"\n                            id=\"sundaram_Upload\"\n                            checked={optionNames === \"sundaramDocumentUpload\"}\n                            onChange={() =>\n                              this.setState({\n                                optionNames: \"sundaramDocumentUpload\",\n                              })\n                            }\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"sundaramDocumentUpload\"\n                            style={{ marginTop: \"3px\" }}\n                          >\n                            Sundaram\n                          </label>\n                        </div>\n                        <div className=\"form-check mr-4\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"bseDocumentUpload\"\n                            id=\"bse_Upload\"\n                            checked={optionNames === \"bseDocumentUpload\"}\n                            onChange={() =>\n                              this.setState({\n                                optionNames: \"bseDocumentUpload\",\n                              })\n                            }\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"bseDocumentUpload\"\n                            style={{ marginTop: \"3px\" }}\n                          >\n                            Bse\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {optionNames === \"camsDocumentUpload\" && (\n                    <Fragment>\n                      <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload WBR2 (Transaction File) </label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload WBR9 (Summary File)</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row justify-content-end mt-3 mr-2\">\n                        <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                          {\" \"}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                  {optionNames === \"karvyDocumentUpload\" && (\n                    <Fragment>\n                      <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload MFSD221 (Transaction File) </label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload MFSD203 (Summary File)</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row justify-content-end mt-3 mr-2\">\n                        <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                          {\" \"}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                  {optionNames === \"ftDocumentUpload\" && (\n                    <Fragment>\n                      <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label> (Transaction File) </label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label> (Summary File)</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row justify-content-end mt-3 mr-2\">\n                        <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                          {\" \"}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                  {optionNames === \"sundaramDocumentUpload\" && (\n                    <Fragment>\n                      <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload ER02 (Transaction File)</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload ER08 (Summary File)</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row justify-content-end mt-3 mr-2\">\n                        <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                          {\" \"}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                  {optionNames === \"bseDocumentUpload\" && (\n                    <Fragment>\n                      <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload Client Master Report</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                          <div className=\"form-group\">\n                            <label>Upload Mandate Registration Report</label>\n                            <input className=\"form-control\" type=\"file\" name=\"file\" />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row justify-content-end mt-3 mr-2\">\n                        <Button type=\"button\" customClass={\"al_button\"} size=\"sm\" text=\"UPLOAD\">\n                          {\" \"}\n                        </Button>\n                      </div>\n                    </Fragment>\n                  )}\n                </div>\n              </div>\n              <div>\n                <h6>\n                  Please read through the *guidelines* very very carefully to minimize mistakes.{\" \"}\n                </h6>\n                <br />\n                <ol>\n                  <li>We support excel & csv files for upload.</li>\n                  <br></br>\n                  <li>\n                    If the headers do not match or if the file format is different, you will get an\n                    error message. Please contact Support Team during such cases.{\" \"}\n                  </li>\n                  <br />\n                  <li>\n                    {\" \"}\n                    While downloading the summary files from RTA systems, please ensure date\n                    uniformity between all 4 RTAs. That is, the report \"as on date\" must be the same\n                    across all RTAs.\n                  </li>\n                  <br />\n                  <li>\n                    While downloading the transaction files from RTA systems, please make sure that\n                    you do it since the oldest date of the transaction.{\" \"}\n                  </li>\n                  <br />\n                  <li>\n                    In the case of FT, transactions can only be extracted for a max period of 6\n                    months. Hence, you will have to upload multiple files.{\" \"}\n                  </li>\n                </ol>\n                {showMoreGuide && (\n                  <ol start=\"6\">\n                    <li>\n                      You can check out the processing stats under the RTA tab in order to know the\n                      transaction dates from which the file is processed.{\" \"}\n                    </li>\n                    <br />\n                    <li>\n                      You can always upload the same files again, and in such cases the data will be\n                      overwritten & replace the existing data\n                    </li>\n                    <br />\n                    <li>\n                      A unit recon process will be initiated in order to ensure data accuracy.\n                      Exceptions can be found under \"recon\" tab, where there would have been a\n                      mismatch between units in transaction & summary file, for a given folio/scheme\n                      combination. Please be aware that the investment reports will not be accurate\n                      for these.{\" \"}\n                    </li>\n                    <br />\n                    <li>\n                      Please be aware that the investment reports will not be accurate for folios\n                      where there is a recon failure. You are requested to upload fresh set of data\n                      only for the exceptions.\n                    </li>\n                    <br />\n                    <li>\n                      You may also find the client details where there are multiple banks,\n                      nominations & addresses being provided.{\" \"}\n                    </li>\n                    <br />\n                    <li>We will be creating unique client accounts based on all 4 RTA files </li>\n                    <br />\n                    <li>\n                      We will be mapping the existing UCCs to the client accounts so that you may\n                      continue to use them.{\" \"}\n                    </li>\n                    <br />\n                    <li>\n                      Clients with existing UCCs would be fit to transact through this software from\n                      day zero. No on-boarding required.\n                    </li>\n                    <br />\n                    <li>\n                      We will be mapping the existing mandate IDs to the client accounts. You may\n                      initiate a fresh SIP from this software using the same mandate.{\" \"}\n                    </li>\n                    <br />\n                    <li>\n                      For fresh UCC creation, we would populate the existing client data from the\n                      backend so that you would be required to fill only minimal information.{\" \"}\n                    </li>\n                  </ol>\n                )}\n                <Button\n                  text={showMoreGuide ? \"Show less\" : \"Show More\"}\n                  size=\"sm\"\n                  onClick={() => this.showMore()}\n                  customClass={\"al_button\"}\n                />\n              </div>\n            </div>\n          </div>\n        </div> */}\n      </Fragment>\n    );\n  }\n}\n\nexport default UploadRtas;\n"]},"metadata":{},"sourceType":"module"}