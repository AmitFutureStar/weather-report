{"ast":null,"code":"var _jsxFileName = \"/home/amit/Desktop/weather-app/src/LiveData.js\";\nimport React, { Fragment, Component } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass LiveData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderChart() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0;\n    chart.padding(0, 0, 0, 0);\n    chart.zoomOutButton.disabled = true;\n    let data = [];\n    let visits = 10;\n    let i = 0;\n\n    for (i = 0; i <= 30; i++) {\n      visits -= Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      data.push({\n        date: new Date().setSeconds(i - 30),\n        value: visits\n      });\n    }\n\n    chart.data = data;\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    dateAxis.renderer.minGridDistance = 30;\n    dateAxis.dateFormats.setKey(\"second\", \"ss\");\n    dateAxis.periodChangeDateFormats.setKey(\"second\", \"[bold]h:mm a\");\n    dateAxis.periodChangeDateFormats.setKey(\"minute\", \"[bold]h:mm a\");\n    dateAxis.periodChangeDateFormats.setKey(\"hour\", \"[bold]h:mm a\");\n    dateAxis.renderer.inside = true;\n    dateAxis.renderer.axisFills.template.disabled = true;\n    dateAxis.renderer.ticks.template.disabled = true;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.interpolationDuration = 500;\n    valueAxis.rangeChangeDuration = 500;\n    valueAxis.renderer.inside = true;\n    valueAxis.renderer.minLabelPosition = 0.05;\n    valueAxis.renderer.maxLabelPosition = 0.95;\n    valueAxis.renderer.axisFills.template.disabled = true;\n    valueAxis.renderer.ticks.template.disabled = true;\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.interpolationDuration = 500;\n    series.defaultState.transitionDuration = 0;\n    series.tensionX = 0.8;\n    chart.events.on(\"datavalidated\", function () {\n      dateAxis.zoom({\n        start: 1 / 15,\n        end: 1.2\n      }, false, true);\n    });\n    dateAxis.interpolationDuration = 500;\n    dateAxis.rangeChangeDuration = 500;\n    document.addEventListener(\"visibilitychange\", function () {\n      if (document.hidden) {\n        if (interval) {\n          clearInterval(interval);\n        }\n      } else {\n        startInterval();\n      }\n    }, false); // add data\n\n    let interval;\n\n    function startInterval() {\n      interval = setInterval(function () {\n        visits = visits + Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\n        let lastdataItem = series.dataItems.getIndex(series.dataItems.length - 1);\n        chart.addData({\n          date: new Date(lastdataItem.dateX.getTime() + 1000),\n          value: visits\n        }, 1);\n      }, 1000);\n    }\n\n    startInterval(); // all the below is optional, makes some fancy effects\n    // gradient fill of the series\n\n    series.fillOpacity = 1;\n    let gradient = new am4core.LinearGradient();\n    gradient.addColor(chart.colors.getIndex(0), 0.2);\n    gradient.addColor(chart.colors.getIndex(0), 0);\n    series.fill = gradient; // this makes date axis labels to fade out\n\n    dateAxis.renderer.labels.template.adapter.add(\"fillOpacity\", function (fillOpacity, target) {\n      let dataItem = target.dataItem;\n      return dataItem.position;\n    }); // need to set this, otherwise fillOpacity is not changed and not set\n\n    dateAxis.events.on(\"validated\", function () {\n      am4core.iter.each(dateAxis.renderer.labels.iterator(), function (label) {\n        label.fillOpacity = label.fillOpacity;\n      });\n    }); // this makes date axis labels which are at equal minutes to be rotated\n\n    dateAxis.renderer.labels.template.adapter.add(\"rotation\", function (rotation, target) {\n      let dataItem = target.dataItem;\n\n      if (dataItem.date && dataItem.date.getTime() == am4core.time.round(new Date(dataItem.date.getTime()), \"minute\").getTime()) {\n        target.verticalCenter = \"middle\";\n        target.horizontalCenter = \"left\";\n        return -90;\n      } else {\n        target.verticalCenter = \"bottom\";\n        target.horizontalCenter = \"middle\";\n        return 0;\n      }\n    }); // bullet at the front of the line\n\n    let bullet = series.createChild(am4charts.CircleBullet);\n    bullet.circle.radius = 5;\n    bullet.fillOpacity = 1;\n    bullet.fill = chart.colors.getIndex(0);\n    bullet.isMeasured = false;\n    series.events.on(\"validated\", function () {\n      bullet.moveTo(series.dataItems.last.point);\n      bullet.validatePosition();\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart(this.props);\n  }\n\n  render() {\n    const {\n      chartId\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default LiveData;","map":{"version":3,"sources":["/home/amit/Desktop/weather-app/src/LiveData.js"],"names":["React","Fragment","Component","am4core","am4charts","am4themes_animated","useTheme","LiveData","constructor","props","state","renderChart","chart","create","XYChart","hiddenState","properties","opacity","padding","zoomOutButton","disabled","data","visits","i","Math","round","random","push","date","Date","setSeconds","value","dateAxis","xAxes","DateAxis","renderer","grid","template","location","minGridDistance","dateFormats","setKey","periodChangeDateFormats","inside","axisFills","ticks","valueAxis","yAxes","ValueAxis","tooltip","interpolationDuration","rangeChangeDuration","minLabelPosition","maxLabelPosition","series","LineSeries","dataFields","dateX","valueY","defaultState","transitionDuration","tensionX","events","on","zoom","start","end","document","addEventListener","hidden","interval","clearInterval","startInterval","setInterval","lastdataItem","dataItems","getIndex","length","addData","getTime","fillOpacity","gradient","LinearGradient","addColor","colors","fill","labels","adapter","add","target","dataItem","position","iter","each","iterator","label","rotation","time","verticalCenter","horizontalCenter","bullet","createChild","CircleBullet","circle","radius","isMeasured","moveTo","last","point","validatePosition","componentDidMount","render","chartId"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nclass LiveData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n\n  }\n  renderChart(){\n\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0;\n    \n    chart.padding(0, 0, 0, 0);\n    \n    chart.zoomOutButton.disabled = true;\n    \n    let data = [];\n    let visits = 10;\n    let i = 0;\n    \n    for (i = 0; i <= 30; i++) {\n        visits -= Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n        data.push({ date: new Date().setSeconds(i - 30), value: visits });\n    }\n    \n    chart.data = data;\n    \n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    dateAxis.renderer.minGridDistance = 30;\n    dateAxis.dateFormats.setKey(\"second\", \"ss\");\n    dateAxis.periodChangeDateFormats.setKey(\"second\", \"[bold]h:mm a\");\n    dateAxis.periodChangeDateFormats.setKey(\"minute\", \"[bold]h:mm a\");\n    dateAxis.periodChangeDateFormats.setKey(\"hour\", \"[bold]h:mm a\");\n    dateAxis.renderer.inside = true;\n    dateAxis.renderer.axisFills.template.disabled = true;\n    dateAxis.renderer.ticks.template.disabled = true;\n    \n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.interpolationDuration = 500;\n    valueAxis.rangeChangeDuration = 500;\n    valueAxis.renderer.inside = true;\n    valueAxis.renderer.minLabelPosition = 0.05;\n    valueAxis.renderer.maxLabelPosition = 0.95;\n    valueAxis.renderer.axisFills.template.disabled = true;\n    valueAxis.renderer.ticks.template.disabled = true;\n    \n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.interpolationDuration = 500;\n    series.defaultState.transitionDuration = 0;\n    series.tensionX = 0.8;\n    \n    chart.events.on(\"datavalidated\", function () {\n        dateAxis.zoom({ start: 1 / 15, end: 1.2 }, false, true);\n    });\n    \n    dateAxis.interpolationDuration = 500;\n    dateAxis.rangeChangeDuration = 500;\n    \n    document.addEventListener(\"visibilitychange\", function() {\n        if (document.hidden) {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n        else {\n            startInterval();\n        }\n    }, false);\n    \n    // add data\n    let interval;\n    function startInterval() {\n        interval = setInterval(function() {\n            visits =\n                visits + Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\n            let lastdataItem = series.dataItems.getIndex(series.dataItems.length - 1);\n            chart.addData(\n                { date: new Date(lastdataItem.dateX.getTime() + 1000), value: visits },\n                1\n            );\n        }, 1000);\n    }\n    \n    startInterval();\n    \n    // all the below is optional, makes some fancy effects\n    // gradient fill of the series\n    series.fillOpacity = 1;\n    let gradient = new am4core.LinearGradient();\n    gradient.addColor(chart.colors.getIndex(0), 0.2);\n    gradient.addColor(chart.colors.getIndex(0), 0);\n    series.fill = gradient;\n    \n    // this makes date axis labels to fade out\n    dateAxis.renderer.labels.template.adapter.add(\"fillOpacity\", function (fillOpacity, target) {\n        let dataItem = target.dataItem;\n        return dataItem.position;\n    })\n    \n    // need to set this, otherwise fillOpacity is not changed and not set\n    dateAxis.events.on(\"validated\", function () {\n        am4core.iter.each(dateAxis.renderer.labels.iterator(), function (label) {\n            label.fillOpacity = label.fillOpacity;\n        })\n    })\n    \n    // this makes date axis labels which are at equal minutes to be rotated\n    dateAxis.renderer.labels.template.adapter.add(\"rotation\", function (rotation, target) {\n        let dataItem = target.dataItem;\n        if (dataItem.date && dataItem.date.getTime() == am4core.time.round(new Date(dataItem.date.getTime()), \"minute\").getTime()) {\n            target.verticalCenter = \"middle\";\n            target.horizontalCenter = \"left\";\n            return -90;\n        }\n        else {\n            target.verticalCenter = \"bottom\";\n            target.horizontalCenter = \"middle\";\n            return 0;\n        }\n    })\n    \n    // bullet at the front of the line\n    let bullet = series.createChild(am4charts.CircleBullet);\n    bullet.circle.radius = 5;\n    bullet.fillOpacity = 1;\n    bullet.fill = chart.colors.getIndex(0);\n    bullet.isMeasured = false;\n    \n    series.events.on(\"validated\", function() {\n        bullet.moveTo(series.dataItems.last.point);\n        bullet.validatePosition();\n    });\n\n  }\n\n  componentDidMount() {\n    this.renderChart(this.props);\n  }\n\n\n\n  render() {\n    const { chartId } = this.props;\n    return (\n      <Fragment>\n        <div id={\"chartdiv\"}></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default LiveData;\n"]},"metadata":{},"sourceType":"module"}